package myMailService;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
//import java.io.ObjectInputStream.GetField;
import java.net.InetAddress;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.UnknownHostException;
//import java.sql.Time;
//import java.net.UnknownHostException;
import java.util.*;
import javax.mail.*;
import javax.mail.internet.*;
import javax.swing.JOptionPane;

public class SendEmail {

	/**
	 * Email App Version 1
	 * Part of my Network Library i'm developing 
	 * programmed by Jason Chalom 2012 
	 * 
	 * The main method is just a basic gmail sending application
	 * 
	 * Future Features:
	 * Yahoo, live and an option to insert other mail servers
	 * with getter
	 * More method resolution and error redundancy
	 * SHA 256 Enc and my own enc algorithms for password and email
	 * protection
	 * SSL Support
	 * Error reporting
	 */
	//fields
	//private static String RecipientEmail;
	//private String SenderEmail;
	//private String host;
	//private int hostPort;
	//private static String psswrd;
	//private static Properties sysProperties;
	//private 
	//public SendEmail()
	//{
	//defaultConstructor
	//}

	public static void main(String[] args) {
		//public static void Send {
		//test testConnection() method
		//System.out.println("connection: "+(testConnection()));
		
		try {
			//if (InetAddress.getByAddress((InetAddress.getByName("www.google.com").getHostAddress()).getBytes()).isReachable(5000))
			{
				final String SenderEmail= JOptionPane.showInputDialog("Enter Sender Email:");
				final String RecipientEmail= JOptionPane.showInputDialog("Enter Recipient Email:");
				//this is the gmail password will implement more secure stroage solution using enc
				final String psswrd = JOptionPane.showInputDialog("Enter Password:"); 
				//gmail smtp settings
				String host= "smtp.gmail.com";
				int hostPort = 465;
				//properties class It is a string which returns a string
				//Store smtp settings
				Properties sysProperties;
				sysProperties = System.getProperties();
				//sysProperties.setProperty("mail.smtp.host", host);
				//sysProperties.setProperty("mail.smtp.user", SenderEmail);
				//sysProperties.setProperty("mail.smtp.password", psswrd);
				//sysProperties.setProperty("mail.smtp.port", ""+hostPort);
				//sysProperties.setProperty("mail.smtp.auth", "true");

				sysProperties.setProperty("mail.smtp.host", host);
				sysProperties.setProperty("mail.smtp.user", SenderEmail);
				sysProperties.setProperty("mail.smtp.password", "\""+psswrd+"\"");
				sysProperties.setProperty("mail.smtp.port", "\""+hostPort+"\"");
				sysProperties.setProperty("mail.smtp.auth", "true");
				sysProperties.setProperty("mail.smtp.starttls.enable", "true");
				//sysProperties.setProperty("mail.smtp.ssl.enable","true");

				sysProperties.setProperty("mail.debug", "true");

				//System.out.println("Constructed local fields");

				Session session = Session.getDefaultInstance(sysProperties, 
						new Authenticator(){
					protected PasswordAuthentication getPasswordAuthentication(){
						return new PasswordAuthentication(SenderEmail, psswrd);
					}});
				//System.out.println("Set up session");
				try
				{
					Message message = new MimeMessage(session);
					message.setFrom(new InternetAddress(SenderEmail));
					message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(RecipientEmail));
					//Subject and body
					message.setSubject("AutoGenerated Email Test");
					message.setText("This is a test of autogenerated emailing from Java," +
							"\nSystem: "+System.getProperties()+"\n" +
							"System Time: "+(new Date().toString())+"" +
							"\nSystem Name: "+InetAddress.getLocalHost()+"\n" +
							"End Of Line.");

					System.out.println("created message, Now sending...");
					//Transport through JVM
					//Transport transport = session.getTransport("smtp");
					//transport.connect(host, "user name", "asdfgh");
					//transport.sendMessage(message, message.getAllRecipients());
					//transport.close();

					Transport.send(message);
					System.out.println("Message Sent.");


				}
				catch(AddressException e)
				{
					System.err.println("Address Exception");
				}
				catch(MessagingException e)
				{
					System.err.println("Messaging Exception");
					throw new RuntimeException(e);
				}


			}


		} catch (IOException e) {
			e.printStackTrace();
			System.err.println("Connection Timeout: 5000ms, Test Internet Connection");
		}

	}
	
	//public static  boolean testConnection()
	//{
	//	try {
	//		URL url = new URL("www.google.com");
	//	} catch (MalformedURLException e1) {
	//		// TODO Auto-generated catch block
	//		e1.printStackTrace();
	//	}
	//	boolean isConnected = false;
	//	try {
	//		if (InetAddress.getByAddress(url).isReachable(5000))
	//		{
	//			isConnected = true;
	//		}
	//	} catch (IOException e) {
	//		// TODO Auto-generated catch block
	//		System.err.println("Connection Timeout: 5000ms, Test Internet Connection");
	//		e.printStackTrace();
	//	}
		
	//	
	//	return isConnected;
	//}
	public String[] SendGMail(String RE, String debug, String password, String Sender, String subj, String mess)
	{
		String[] out = new String [2];
		out[0]= "Email successful";
		//out[1] = "Email was Succesful";
		debug = "";

		//try {
		//if (InetAddress.getByAddress((InetAddress.getByName("www.google.com").getHostAddress()).getBytes()).isReachable(5000))
		//{
		final String RecipientEmail= RE;
		final String SenderEmail= Sender;
		//this is the gmail password will implement more secure stroage solution using enc
		final String psswrd = password ; 
		//gmail smtp settings
		String host= "smtp.gmail.com";
		int hostPort = 465;
		//properties class It is a string which returns a string
		//Store smtp settings
		Properties sysProperties;
		sysProperties = System.getProperties();
		//sysProperties.setProperty("mail.smtp.host", host);
		//sysProperties.setProperty("mail.smtp.user", SenderEmail);
		//sysProperties.setProperty("mail.smtp.password", psswrd);
		//sysProperties.setProperty("mail.smtp.port", ""+hostPort);
		//sysProperties.setProperty("mail.smtp.auth", "true");

		sysProperties.setProperty("mail.smtp.host", host);
		sysProperties.setProperty("mail.smtp.user", SenderEmail);
		sysProperties.setProperty("mail.smtp.password", "\""+psswrd+"\"");
		sysProperties.setProperty("mail.smtp.port", "\""+hostPort+"\"");
		sysProperties.setProperty("mail.smtp.auth", "true");
		sysProperties.setProperty("mail.smtp.starttls.enable", "true");
		//sysProperties.setProperty("mail.smtp.ssl.enable","true");
		if (debug.equals("true"))
		{
			sysProperties.setProperty("mail.debug", "true");
		}
		else if (debug.equals("false"))
		{
			sysProperties.setProperty("mail.debug", "false");
		}
		else
		{
			sysProperties.setProperty("mail.debug", "false");
		}



		//System.out.println("Constructed local fields");

		Session session = Session.getDefaultInstance(sysProperties, 
				new Authenticator(){
			protected PasswordAuthentication getPasswordAuthentication(){
				return new PasswordAuthentication(SenderEmail, psswrd);
			}});
		System.out.println("Set up session");
		try
		{
			Message message = new MimeMessage(session);
			message.setFrom(new InternetAddress(SenderEmail));
			message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(RecipientEmail));
			//Subject and body
			//message.setSubject("AutoGenerated Email Test");
			message.setSubject(subj);
			//try {
				//message.setText("This is a test of autogenerated emailing from Java," +
				//		"\nSystem: "+System.getProperties()+"\n" +
				//		"System Time: "+(new Date().toString())+"" +
				//		"\nSystem Name: "+InetAddress.getLocalHost()+"\n" +
				//		"End Of Line.");
				message.setText(mess);
		//	} catch (UnknownHostException e) {
				// TODO Auto-generated catch block
			//	e.printStackTrace();
			//}

			//System.out.println("created message, Now sending...");
			//Transport through JVM
			//Transport transport = session.getTransport("smtp");
			//transport.connect(host, "user name", "asdfgh");
			//transport.sendMessage(message, message.getAllRecipients());
			//transport.close();

			Transport.send(message);
			//System.out.println("Message Sent.");


		}
		catch(AddressException e)
		{
			System.err.println("Address Exception");
			out[0]= "Email was unsuccessful";
		}
		catch(MessagingException e)
		{
			out[0]= "Email was unsuccessful";
			System.err.println("Messaging Exception");
			throw new RuntimeException(e);

		}





		//} catch (IOException e) {
		//	e.printStackTrace();
		//	out[0]= "Email was unsuccessful";
		//	System.err.println("Connection Timeout: 5000ms, Test Internet Connection");
		//}

		BufferedReader BRconsole = new BufferedReader(new InputStreamReader(System.in));
		//String console = ""+BRconsole;
		out[1]=""+BRconsole;
		return out;
	}


	//test out cmdline
	//System.out.println("Sys properties field "+System.getProperties());

}


